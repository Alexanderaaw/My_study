Словарь (dictionary) - это НЕУПОРЯДОЧЕННАЯ коллекция элементов, доступ к которым осуществляется ПО КЛЮЧУ. Каждый элемент в словаре имеет две части: ключ и значение. 
Ключ используется, чтобы установить местонахождение конкретного значения, ключем может быть любой неизменяемый тип данных (число, строка, кортеж). Значение - любой тип данных.
{keyl: value, key2: value,....}
===========================================================
Создание словаря
• Создание пустого словаря и дальнейшее заполнение его
mydict = {}
mydict['country'] = 'Russia'
print(mydict, type(mydict))  # {'country': 'Russia'} <class 'dict'>
•	Создание заполненного словаря
my_dict = {"number": 23, 2: True, "my_list": [1, 2, 3]} 
• Создание словаря из другого объекта
a = {'one': 1, 'two': 2}
b = dict(one=1, two=2)
c = dict([('one', 1), ('two', 2)])
d = dict({'one': 1, 'two': 2})
print(a == b == c == d)  # True
===========================================================
Основные методы и операции для словаря ••• my_dict = {"number": 23, 2: True, "my_list": [1, 2, 3]} •••
•	Количество элементов словаря - len(my_dict)  # 3
•	Возвращает значение, соответствующее ключу key или генерирует ошибку КеуЕrrоr - my_dict[2]  # True
•	Изменить значение для ключа
my_dict[2] = False 
print(my_dict[2])  # False
•	Удаляет ключ и соответствующее ему значение или генерирует ошибку КеуЕrrоr.
del my_dict[2]
print(my_dict)  # {'number': 23, 'my_list': [1, 2, 3]}
•	Проверка на присутствие ключа в словаре - key in my_dict
•	Проверка на отсутствие ключа в словаре - not key in my_dict или key not in my_dict
•	Удалить все элементы из словаря - my_dict.clear()  # {}
•	Возвращает поверхностную копию словаря - my_new_dict = my_dict.copy()
•	Возвращает значение, соответствующее ключу key - my_dict.get('my_list')  # [1, 2, 3]
        ! если my_dict.get(5, 'not found')  # not found
•	Возвращает новое представление элементов - пар (key, value) - my_dict.items()  # dict_items([('number', 23), (2, True), ('my_list', [1, 2, 3])])
•	Возвращает новое представление ключей словаря - my_dict.keys()  # dict_keys(['number', 2, 'my_list'])
•	Возвращает новое представление значений словаря - my_dict.values())  # dict_values([23, True, [1, 2, 3]])


