Диапазон

Диапазон (range) - это последовательность чисел, начинающаяся по умолчанию с нуля и заканчивающаяся указанным значением, 
в которой каждый следующий элемент по умолчанию на единицу больше, чем предыдущий.

Создание диапазона
range ([start,] stop [, step])
•	start - целое число, указывающее начальное значение (по умолчанию 0)
•	stop - целое число, указывающее конечное значение (не включается в диапазон!)
•	step - целое число, указывающее на приращение (по умолчанию 1)

print(list(range(10)))  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
print(list(range(2, 10)))  # [2, 3, 4, 5, 6, 7, 8, 9]
print(list(range(2, 10, 3)))  # [2, 5, 8]
print(list(range(-1, -10, -2)))  # [-1, -3, -5, -7, -9]
print(list(range(0)))  # []
---------------------------------------------------------------------------------------
Общие функции и методы для списков, кортежей и диапазонов
• Проверка принадлежности (не принадлежности) элемента объекту: in или not in
a = range(10)
print(4 in a)  # True
print(11 not in a)  # True
• Конкатенация (объединение) объектов: +
first_list = (1, 2, 3, 4, 'text')
second_list = (123, 'text')
print(first_list + second_list)  # (1, 2, 3, 4, 'text', 123, 'text')
• Получение длины объекта: len(s)
my_list = [123, 'text', 4.5]
print(len(my_list))  # 3
• Получение минимального/максимального элемента: min(s)/max(s)
my_list = [1, 4, 6, 8, 5, 2]
print(min(my_list))  # 1
print(max(my_list))  # 8
• Получение суммы элементов: sum(s)
my_list = (1, 4, 6, 8, 5, 2)
print(sum(my_list))  # 26
• Сортировка элементов: sorted(s [, key=None] [, reverse=False]) - НЕ ПУТАТЬ С МЕТОДОМ sort, который меняет сам объект
my_list = (1, 4, 6, 8, 5, 2)
print(sorted(my_list, reverse=True))  # [8, 6, 5, 4, 2, 1]
• Метод получение количества вхождений элемента в объект count(x)
tup1 = (1, 2, 4, 5)
print(tup1.count(2))
• Метод получения индекса первого вхождения элемента index(x)
tup1 = (1, 2, 4, 5)
print(tup1.index(5))  # 3

