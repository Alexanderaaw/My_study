Последовательности:

Списки (list)
Кортежи (tuple)
Диапазон (range)

Списки (list) – упорядоченная изменяемая коллекция ссылок на объекты произвольных типов. Список состоит из элементов, заключенных в квадратные скобки [ ] и разделенных между собой запятыми.

Создать список можно:
1)	По средствам инициализации 
s1 = []
s2 = [1, 'wow']
print(type(s1), type(s2))  # <class 'list'> <class 'list'>
2)	 С помощью функции преобразования 
s3 = list('wow')  # можно передавать только итерируемые объекты!
print(s3, type(s3))  # ['w', 'o', 'w'] <class 'list'>
3)	С помощью генератора списков
c = [c for c in "wow"]  
print(c)  # ['w', 'o', 'w']
---------------------------------------------------------------------------------
Доступ к элементам списка
my_list = [True, 768, 3.14, 'text', 70.2]
print(my_list[0])  # True
print(my_list[1:3])  # [768, 3.14]
print(my_list[1:5:2])  # [768, 'text']
print(my_list[:])  # [True, 768, 3.14, 'text', 70.2]
print(my_list[::-1])  # [70.2, 'text', 3.14, 768, True]
print(my_list[-1])  # 70.2
---------------------------------------------------------------------------------
Удаление элементов списка
Ключевое слово del – удаление элемента или нескольких элементов списка, а также переменных
a = [1, 2, 4, 6, 66]
del a[0]
print(a)  # [2, 4, 6, 66]
del a[3:5]
print(a)  # [2, 4, 6]
del a[:]  # удаление списка
print(a)  # []
del a
print(a)  # NameError: name 'a' is not defined
---------------------------------------------------------------------------------
Методы списка
a = [1, 2, 3, 4, 5]
a.append(777)  # добавляет объект в конец списка
print(a)  # [1, 2, 3, 4, 5, 777]
a.extend([1, 2])  # добавляет только итеррируемый объект: '1' или 'wow'
print(a)  # [1, 2, 3, 4, 5, 1, 2]
a.insert(1, True)  # [1, True, 2, 3, 4, 5, 777, 1, 2]
print(a)
a = a.append(4)
print(a)  # None
---------------------------------------------------

a1 = [1, 2, 4, 1, 3]
a1.remove(1)  # удалит значение из скобок в списке, если их два, то первый
# если такого элемента нет, то ошибка ValueError
print(a1)  # [2, 4, 1, 3]

a2 = [1, 2, 4, 1, 3]
a_new = a2.pop(1)  # удалит элемент с ЗАДАННОЙ позиции + можно его использовать
a_new1 = a2.pop()  # удалит последний элемент из списка
print(a2, a_new, type(a_new))  # [1, 4, 1] 2 <class 'int'>

a3 = [1, 2, 3, 4, 5]
a3.clear()  # удаляет все элементы списка
print(a3)  # []

list1 = [9, 2, 7, 6, 8, 2, 3, 5, 1]
print(list1.index(2))  # возвращает индекс первого элемента, значение которого равно тому что в скобках
# если вложенный объект не найден, вызывает ValueError

list2 = [9, 2, 7, 6, 8, 2, 3, 5, 1]
print(list2.count(2))  # возвращает количество элементов числа в скобках

list3 = [9, 2, 7, 6, 8, 2, 3, 5, 1]
list3.sort()  # сортирует элементы списка
print(list3)  # [1, 2, 2, 3, 5, 6, 7, 8, 9]

list4 = [9, 2, 7, 6, 8, 2, 3, 5, 1]
list4.reverse()  # размещает в обратном порядке
print(list4)  # [1, 5, 3, 2, 8, 6, 7, 2, 9]
list4.copy()  # возвращает поверхностную копию списка
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# ДЛЯ СПРАВКИ:
# поверхностная копия создает новый объект, при изменении оригинала меняется и копия
# глубокая копия создает новый объект, в который помещаются копии(не сслылки) элементов оригинала
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

