Числовой тип данных
•	целые числа
•	числа с плавающей точкой
•	комплексные числа

int() - позволяет привести значение к типу int
float() - позволяет привести значение к типу float

first_number = "13"
second_number = 12
print(int(first_number) + second_number)  # 25
print(float(first_number) + second_number)  # 25.0
print(first_number + str(second_number))  # 1312

round() - служит для округления вещественных чисел
first_number = 2.454
second_number = 12.44853356
print(round(first_number, 3) + round(second_number, 3))  # 14.903
------------------------------------------------------------------------------------
Модуль math

ceil(x)	округление до ближайшего большего числа
fabs(x)	модуль X
factorial(x)	факториал х
floor(x)	округление до ближайшего меньшего числа
fmod(x, у)	остаток от деления х на у
fsum(sequence)	сумма всех членов последовательности
modf(x)	возвращает дробную и целую часть числа х
trunc(x)	усекает значение х до целого
ехр(х)	е в степени х
log(x, [base])	логарифм х по основанию base (по умолчанию е)
Iog10(x)	логарифм х по основанию 10
Iog2(x)	логарифм х по основанию 2
pow(x, у)	x в степени у
sqrt(x)	квадратный корень из х
hypot(x, у)	вычисляет гипотенузу треугольника с катетами х и у
degrees(x)	конвертирует радианы в градусы
radians(x)	конвертирует градусы в радианы
pi	значение числа Пи = 3,1415926....
e	значение числа Эйлера е = 2,718281....
acos(x)	арккосинус x (в радианах)
asin(x)	арксинус х (в радианах)
atan(x)	арктангенс х (в радианах)
cos(x)	косинус х радиан
sin(x)	синус х радиан
tan(x)	тангенс х радиан

import math
print(math.pow(2, 6))  # 64.0
print(math.trunc(2.444))  # 2
print(math.log10(6))  # 0.7781512503836436
-------------------------------------------------------------------------------------------------------------
Округление в меньшую сторону или усечение

Следует отметить одну тонкость: операция // неофициально называется усекающим делением, но более точно говорить о ней как о делении с округлением, 
в меньшую сторону — она усекает результат до ближайшего целого значения, которое меньше подлинного результата. Совокупным эффектом оказывается округление с понижением, 
а не строгое усечение, и это имеет значение при работе с отрицательными числами. Вы можете прояснить для себя указанное отличие с помощью Python-модуля math:
import math
# Ближайшее меньшее значение
print(math.floor(2.5))  # 2
print(math.floor(-2.5))  # -3
# Усечение дробной части (в сторону нуля)
print(math.trunc(2.5))  # 2
print(math.trunc(-2.5))  # -2
print(math.pi, math.e)  # 3.141592653589793 2.718281828459045
print(abs(-45))    # 45
print(pow(4, 8))  # 65536
print(min(1, -4, 5, 65))  # -4
print(sum((1, 5, 3, -44)))  # -35
print(math.sqrt(49))  # 7.0
print(round(4.5453, 2))  # 4.55
------------------------------------------------------------------------------------
Стандартный библиотечный модуль random также должен импортироваться. Он предлагает инструменты для решения таких задач, как выбор случайного числа 
с плавающей точкой между 0 и 1 и выбор случайного целого между двумя числами:
import random
print(random.random())  # 0.20746047826300074
print(random.randint(1, 99))  # 87
print(random.choice([1, 4, 55, 34]))  # 55

------------------------------------------------------------------------------------

Операции выражений Python 

yield х 	Протокол send функции генератора
lambda аргументы: выражение 	Создание анонимной функции
х if у else z 	Тернарный выбор (х оценивается, только если у истинно)
х or у 	Логическое “ИЛИ” (у оценивается, только если х ложно)
х and у 	Логическое “И” (у оценивается, только если х истинно)
not x 	Логическое “НЕ”
х in у, x not in у 	Членство (итерируемые объекты, множества)
x is у, x is not у 	Проверки идентичности объектов
x < у, x <= у, x > у, x >= у 	Сравнение по абсолютной величине, проверка на подмножество и надмножество
х == у, х != у 	Операции равенства значений
х | y 	Побитовое “ИЛИ”, объединение множеств
x ^ у 	Побитовое “исключающее ИЛИ”, симметричная разность множеств
x & у 	Побитовое “И”, пересечение множеств
x « у, x » у 	Сдвиг х влево или вправо на у битов
x + у 	Сложение, конкатенация
x - у 	Вычитание, разность множеств
x * у 	Умножение, повторение
x % у 	Остаток, формат
x / у, x // у 	Деление: настоящее и с округлением в меньшую сторону
-х, +х 	Противоположность, идентичность
~х 	Побитовое “НЕ” (инверсия)
x ** у 	Возведение в степень
х [1] 	Индексация (последовательности, отображения и т.д.)
x [1: j : к] 	Нарезание
х(...) 	Вызов (функции, метода, класса и прочих вызываемых
объектов)
х.атрибут 	Ссылка на атрибут
(...) 	Кортеж, выражение, выражение генератора
[…]	Список, списковое включение
{…}	Словарь, множество, включения множеств и словарей
----------------------------------------------------------------------------------------

