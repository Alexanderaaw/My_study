Текстовые последовательности или строки (string) - это набор символов, заключенный в кавычки.

Функции и методы
• Проверка принадлежности/не принадлежности символа к строке: in/not in
s = 'Hello world'
print('wol' in s)  # False
• Конкатенация (объединение) строк: +
print('Hello' + 'Drink Vodka')
# HelloDrink Vodka
• Повторение строки или подстроки n-ое число раз:
s = 'Drink'
print(s[0:2]*4, "good", sep=' ')
# DrDrDrDr good
• Получение длины строки:
s = 'Drink'
print(len(s))  # 5
• Получение количества вхождений символа: s.count(x)
s1 = 'sdfefsdfdsfredfsr'
print(s1.count('s'))  # 4
• Получение индекса первого вхождения символа: s.index(x[,i[,j]])
s1 = 'sdfefsdfdsfredfsr'
print(s1.index('e'))  # 3
print(s1.index('e', 4))  # 12
------------------------------------------------------------------------------------

sw = 'a duck goes into a bar...'
print(sw.capitalize()) # Делает прописной первую букву строки
# A duck goes into a bar...
print(sw.lower()) # Переводит все символы строки в нижний регистр
# a duck goes into a bar...
print(sw.upper()) # Переводит все символы в верхний регистр
# A DUCK GOES INTO A BAR...
print(sw.title()) # Напишет каждое слово с большой буквы
# A Duck Goes Into A Bar...
-------------------------------------------------------------------------------------
• count(str, [start],[end]) - Возвращает количество неперекающихся вхождений подстроки в диапазоне [начало, конец] (О и длина строки по умолчанию)
s = 'kokokolom'
print(s.index('ko'))  # 0
• endswith(str) - возвращает True, если строка заканчивается на требуемое значение
print(s.endswith('om'))  # True
